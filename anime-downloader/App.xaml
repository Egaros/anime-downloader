<Application x:Class="anime_downloader.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--  Brush Colors  -->
        <SolidColorBrush x:Key="BackgroundColor" Color="#FF7FCEE4" />
        <SolidColorBrush x:Key="MouseOverColor" Color="#4D9BFF" />
        <SolidColorBrush x:Key="SelectedColor" Color="#348DFF" />
        <SolidColorBrush x:Key="PressedDownColor" Color="#3F92FE" />
        <SolidColorBrush x:Key="BorderColor" Color="#A1CAFF" />

        <!--  Special Brush Colors  -->
        <SolidColorBrush x:Key="SpecialBackgroundColor" Color="#10D910" />
        <SolidColorBrush x:Key="SpecialMouseOverColor" Color="#18B618" />
        <SolidColorBrush x:Key="SpecialSelectedColor" Color="#139E13" />
        <SolidColorBrush x:Key="SpecialPressedDownColor" Color="#0B8E0B" />
        <SolidColorBrush x:Key="SpecialBorderColor" Color="#2CF12C" />

        <!--  Fonts  -->
        <FontFamily x:Key="LargeButtonFont">Segoe UI Light</FontFamily>
        <FontFamily x:Key="MediumButtonFont">Segoe WP SemiLight</FontFamily>
        <FontFamily x:Key="MainFont">Yu Gothic UI Semilight</FontFamily>

        <!--  Button Styles  -->
        <Style x:Key="LargeButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="FontFamily" Value="{StaticResource LargeButtonFont}" />
            <Setter Property="FontSize" Value="28" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource SelectedColor}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsChecked" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource MouseOverColor}" />
                </MultiTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedDownColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ConfirmationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource BorderColor}"
                                BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5, 5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="FontFamily" Value="{StaticResource MediumButtonFont}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource MouseOverColor}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedDownColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FeatureButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource BorderColor}"
                                BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5, 5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
            <Setter Property="FontFamily" Value="{StaticResource MediumButtonFont}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource MouseOverColor}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedDownColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SpecialButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource SpecialBorderColor}"
                                BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5, 5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="{StaticResource SpecialBackgroundColor}" />
            <Setter Property="FontFamily" Value="{StaticResource MediumButtonFont}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="{StaticResource SpecialMouseOverColor}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SpecialPressedDownColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>